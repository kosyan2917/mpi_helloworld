<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="CMakePresetLoader"><![CDATA[{
  "useNewFormat": true
}]]></component>
  <component name="CMakeReloadState">
    <option name="reloaded" value="true" />
  </component>
  <component name="CMakeRunConfigurationManager">
    <generated>
      <config projectName="mpi_helloworld" targetName="matplot" />
      <config projectName="mpi_helloworld" targetName="mpi_helloworld" />
      <config projectName="mpi_helloworld" targetName="nodesoup" />
      <config projectName="mpi_helloworld" targetName="example" />
    </generated>
  </component>
  <component name="CMakeSettings">
    <configurations>
      <configuration PROFILE_NAME="Debug-WSL" ENABLED="true" CONFIG_NAME="Debug" TOOLCHAIN_NAME="WSL" />
      <configuration PROFILE_NAME="Release-WSL" ENABLED="true" CONFIG_NAME="Release" TOOLCHAIN_NAME="WSL" />
    </configurations>
  </component>
  <component name="ChangeListManager">
    <list default="true" id="9bc34180-fb85-4d24-920b-f890292c78e2" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/inspectionProfiles/Project_Default.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/vcs.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/CMakeLists.txt" beforeDir="false" afterPath="$PROJECT_DIR$/CMakeLists.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/cache-v2-3735d1a8d187b73d475f.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/cmakeFiles-v1-d67098b14e397eb0b290.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/codemodel-v2-01dbc3d8dea60f45d57d.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/directory-.-Debug-f5ebdc15457944623624.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/index-2024-03-13T13-11-41-0234.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-mpi_helloworld-Debug-47f9f659deeb603e6811.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/toolchains-v1-d37530156d1fc1d1b91b.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeCache.txt" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeCache.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/3.28.3/CMakeCCompiler.cmake" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/3.28.3/CMakeCXXCompiler.cmake" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/3.28.3/CMakeDetermineCompilerABI_C.bin" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/3.28.3/CMakeDetermineCompilerABI_CXX.bin" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/3.28.3/CMakeSystem.cmake" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/3.28.3/CompilerIdC/CMakeCCompilerId.c" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/3.28.3/CompilerIdC/a.out" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/3.28.3/CompilerIdCXX/CMakeCXXCompilerId.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/3.28.3/CompilerIdCXX/a.out" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/CMakeConfigureLog.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/CMakeConfigureLog.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/CMakeDirectoryInformation.cmake" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Makefile.cmake" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Makefile2" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Progress/5" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Progress/count.txt" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/TargetDirectories.txt" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/TargetDirectories.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/clion-Debug-log.txt" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/clion-Debug-log.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/clion-environment.txt" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/clion-environment.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/mpi_helloworld.dir/DependInfo.cmake" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/mpi_helloworld.dir/build.make" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/mpi_helloworld.dir/cmake_clean.cmake" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/mpi_helloworld.dir/compiler_depend.internal" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/mpi_helloworld.dir/compiler_depend.make" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/mpi_helloworld.dir/compiler_depend.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/mpi_helloworld.dir/depend.make" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/mpi_helloworld.dir/flags.make" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/mpi_helloworld.dir/link.txt" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/mpi_helloworld.dir/main.cpp.o" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/mpi_helloworld.dir/main.cpp.o.d" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/mpi_helloworld.dir/progress.make" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/mpi_helloworld.dir/task1_hello_world_openmp.cpp.o" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/mpi_helloworld.dir/task1_hello_world_openmp.cpp.o.d" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/mpi_helloworld.dir/task2_1nsum_openmp.cpp.o" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/mpi_helloworld.dir/task2_1nsum_openmp.cpp.o.d" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/mpi_helloworld.dir/tests.cpp.o" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/mpi_helloworld.dir/tests.cpp.o.d" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/progress.marks" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/Makefile" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/Testing/Temporary/LastTest.log" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/Testing/Temporary/LastTest.log" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/build.ninja" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/build.ninja" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/mpi_helloworld.cbp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/main" beforeDir="false" afterPath="$PROJECT_DIR$/main" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ClangdSettings">
    <option name="formatViaClangd" value="false" />
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="CMakeBuildProfile:Debug-WSL" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectApplicationVersion">
    <option name="ide" value="CLion" />
    <option name="majorVersion" value="2023" />
    <option name="minorVersion" value="2.3" />
  </component>
  <component name="ProjectColorInfo"><![CDATA[{
  "associatedIndex": 8
}]]></component>
  <component name="ProjectId" id="2fVjQFV7v4quSf9Nzr79WpOMnrT" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.cidr.known.project.marker": "true",
    "WebServerToolWindowFactoryState": "false",
    "cf.first.check.clang-format": "false",
    "cidr.known.project.marker": "true",
    "git-widget-placeholder": "main",
    "last_opened_file_path": "E:/Nik/Scripts/mpi_helloworld",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "settings.editor.selected.configurable": "CPPToolchains",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RunManager" selected="CMake Application.example">
    <configuration default="true" type="CLionExternalRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true">
      <method v="2">
        <option name="CLION.EXTERNAL.BUILD" enabled="true" />
      </method>
    </configuration>
    <configuration name="example" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="mpi_helloworld" TARGET_NAME="example" CONFIG_NAME="Release-WSL" RUN_TARGET_PROJECT_NAME="mpi_helloworld" RUN_TARGET_NAME="example">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="matplot" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="mpi_helloworld" TARGET_NAME="matplot" CONFIG_NAME="Release-WSL">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="mpi_helloworld" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="mpi_helloworld" TARGET_NAME="mpi_helloworld" CONFIG_NAME="Release-WSL" RUN_TARGET_PROJECT_NAME="mpi_helloworld" RUN_TARGET_NAME="mpi_helloworld">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="nodesoup" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="mpi_helloworld" TARGET_NAME="nodesoup" CONFIG_NAME="Release-WSL">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="CMake Application.mpi_helloworld" />
      <item itemvalue="CMake Application.nodesoup" />
      <item itemvalue="CMake Application.matplot" />
      <item itemvalue="CMake Application.example" />
    </list>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="9bc34180-fb85-4d24-920b-f890292c78e2" name="Changes" comment="" />
      <created>1713893120746</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1713893120746</updated>
      <workItem from="1713893121854" duration="3144000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VCPKGProject">
    <isAutomaticEditVcpkgJson value="false" />
    <isAutomaticCheckingOnLaunch value="false" />
    <isAutomaticFoundErrors value="true" />
    <isAutomaticFoundErrors value="true" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="com.jetbrains.cidr.execution.debugger.OCBreakpointType">
          <url>file://$PROJECT_DIR$/matrix_multiplication/main.cpp</url>
          <line>110</line>
          <option name="timeStamp" value="3" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>